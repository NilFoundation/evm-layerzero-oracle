/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LoremIpsumOracleFulfiller,
  LoremIpsumOracleFulfillerInterface,
} from "../../../contracts/oracle/LoremIpsumOracleFulfiller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_oracleChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_oracleAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "targetContract",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "targetCalldata",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
        ],
        internalType: "struct RequestData",
        name: "_requestData",
        type: "tuple",
      },
    ],
    name: "fulfillCrossChainRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161054938038061054983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6104b6806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063803431fd14610030575b600080fd5b61004361003e3660046101e9565b610045565b005b600060606100596040840160208501610259565b6001600160a01b03163b156100e5576100786040840160208501610259565b6001600160a01b031661008e604085018561027b565b60405161009c9291906102c9565b6000604051808303816000865af19150503d80600081146100d9576040519150601f19603f3d011682016040523d82523d6000602084013e6100de565b606091505b5090925090505b6000836040516020016100f89190610302565b60408051601f198184030181529190528051602090910120905060008435826101276080880160608901610259565b858760405160200161013d9594939291906103ed565b60408051601f198184030181529082905260005463341a354960e11b83529092506001600160a01b0316906368346a9290610180908a908a90869060040161042e565b6020604051808303816000875af115801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610467565b5050505050505050565b80356001600160a01b03811681146101e457600080fd5b919050565b6000806000606084860312156101fe57600080fd5b833563ffffffff8116811461021257600080fd5b9250610220602085016101cd565b9150604084013567ffffffffffffffff81111561023c57600080fd5b84016080818703121561024e57600080fd5b809150509250925092565b60006020828403121561026b57600080fd5b610274826101cd565b9392505050565b6000808335601e1984360301811261029257600080fd5b83018035915067ffffffffffffffff8211156102ad57600080fd5b6020019150368190038213156102c257600080fd5b9250929050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528235828201526001600160a01b03906103219084016101cd565b16604082015260006040830135601e1984360301811261034057600080fd5b830160208101903567ffffffffffffffff81111561035d57600080fd5b80360382131561036c57600080fd5b6080606085015261038160a0850182846102d9565b915050610390606085016101cd565b6001600160a01b0381166080850152509392505050565b6000815180845260005b818110156103cd576020818501810151868301820152016103b1565b506000602082860101526020601f19601f83011685010191505092915050565b85815284602082015260018060a01b038416604082015260a06060820152600061041a60a08301856103a7565b905082151560808301529695505050505050565b63ffffffff841681526001600160a01b038316602082015260606040820181905260009061045e908301846103a7565b95945050505050565b60006020828403121561047957600080fd5b505191905056fea2646970667358221220794cb066821e941707bfef3d0ed40096d6b93407d3dacfe357bbe6d639d71b1264736f6c63430008100033";

type LoremIpsumOracleFulfillerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoremIpsumOracleFulfillerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoremIpsumOracleFulfiller__factory extends ContractFactory {
  constructor(...args: LoremIpsumOracleFulfillerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LoremIpsumOracleFulfiller> {
    return super.deploy(
      _router,
      overrides || {}
    ) as Promise<LoremIpsumOracleFulfiller>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): LoremIpsumOracleFulfiller {
    return super.attach(address) as LoremIpsumOracleFulfiller;
  }
  override connect(signer: Signer): LoremIpsumOracleFulfiller__factory {
    return super.connect(signer) as LoremIpsumOracleFulfiller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoremIpsumOracleFulfillerInterface {
    return new utils.Interface(_abi) as LoremIpsumOracleFulfillerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoremIpsumOracleFulfiller {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LoremIpsumOracleFulfiller;
  }
}
