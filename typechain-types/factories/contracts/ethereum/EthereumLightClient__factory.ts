/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EthereumLightClient,
  EthereumLightClientInterface,
} from "../../../contracts/ethereum/EthereumLightClient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "placeholderVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "step",
        type: "address",
      },
      {
        internalType: "address",
        name: "rotate",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "genesisValidatorsRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "genesisTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsPerSlot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotsPerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "syncCommitteePeriod",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "syncCommitteePoseidon",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "finalityThreshold",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "HeadUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "SyncCommitteeUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "FINALITY_THRESHOLD",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENESIS_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENESIS_VALIDATORS_ROOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_SLOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SLOTS_PER_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SOURCE_CHAIN_ID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "consistent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "head",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "headers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "attestedSlot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "finalizedSlot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "participation",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "finalizedHeaderRoot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "executionStateRoot",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
            ],
            internalType: "struct LightClientUpdate",
            name: "step",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "syncCommitteeSSZ",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "syncCommitteePoseidon",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "blob",
                type: "bytes",
              },
              {
                internalType: "uint256[]",
                name: "init_params",
                type: "uint256[]",
              },
              {
                internalType: "int256[][]",
                name: "columns_rotations",
                type: "int256[][]",
              },
            ],
            internalType: "struct PlaceholderProof",
            name: "proof",
            type: "tuple",
          },
        ],
        internalType: "struct LightClientRotate",
        name: "update",
        type: "tuple",
      },
    ],
    name: "rotate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gateArgument",
        type: "address",
      },
    ],
    name: "setRotateGate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gateArgument",
        type: "address",
      },
    ],
    name: "setStepGate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "v",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stateRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attestedSlot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalizedSlot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participation",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "finalizedHeaderRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "executionStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct LightClientUpdate",
        name: "update",
        type: "tuple",
      },
    ],
    name: "step",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "syncCommitteePoseidons",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040526003805460ff60a01b1916600160a01b17905560006004553480156200002a57600080fd5b5060405162001af738038062001af78339810160408190526200004d91620001c9565b6200005833620000da565b600180546001600160a01b03808e166001600160a01b031992831617909255600380548d841690831617905560028054928c1692909116919091179055608088905260a087905260c086905260e085905263ffffffff82166101005261ffff811661012052620000c984846200012a565b50505050505050505050506200028b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260086020526040902054158015906200015657506000828152600860205260409020548114155b156200016d5750506003805460ff60a01b19169055565b60008281526008602052604080822083905551829184917f783ee45e8820a8249b1456ff4a715f3bd483b1a59bdc7a49bbc316bbd67a4e2f9190a35050565b80516001600160a01b0381168114620001c457600080fd5b919050565b60008060008060008060008060008060006101608c8e031215620001ec57600080fd5b620001f78c620001ac565b9a506200020760208d01620001ac565b99506200021760408d01620001ac565b985060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015163ffffffff811681146200025d57600080fd5b6101408d015190925061ffff811681146200027757600080fd5b809150509295989b509295989b9093969950565b60805160a05160c05160e0516101005161012051611800620002f7600039600081816102f801526108090152600061021e015260008181610136015261083a0152600081816101940152610a780152600081816103450152610a9c015260006102b101526118006000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638c0da40f116100ad578063da4b05e711610071578063da4b05e7146102f3578063ed7c15341461032d578063f288246114610340578063f2fde38b14610367578063f4cac30d1461037a57600080fd5b80638c0da40f146102755780638da5cb5b146102885780638f7dcfa3146102a3578063a8769acb146102ac578063b34711ab146102d357600080fd5b80635437988d116100f45780635437988d146101de57806356f90d79146101f1578063715018a61461021157806374be2150146102195780638bc33af31461025557600080fd5b80632073ee70146101315780632bcccca51461016b578063304b90711461018f5780634a732408146101b65780634f96cf28146101cb575b600080fd5b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b60035461017f90600160a01b900460ff1681565b6040519015158152602001610162565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6101c96101c436600461109d565b61039a565b005b6101c96101d936600461109d565b6103c4565b6101c96101ec36600461109d565b6103ee565b6101586101ff3660046110cd565b60056020526000908152604090205481565b6101c9610418565b6102407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610162565b6101586102633660046110cd565b60066020526000908152604090205481565b6101c96102833660046110e6565b61042c565b6000546040516001600160a01b039091168152602001610162565b61015860045481565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6101586102e13660046110cd565b60086020526000908152604090205481565b61031a7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610162565b6101c961033b366004611121565b61049d565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6101c961037536600461109d565b6105dd565b6101586103883660046110cd565b60076020526000908152604090205481565b6103a2610656565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103cc610656565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6103f6610656565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610420610656565b61042a60006106b0565b565b6000610438828061115c565b6104419061125c565b90506000610457610452848061115c565b610700565b905060006104688360200151610833565b90506000610477826001611305565b905061048285610865565b8215610496576104968186604001356109f4565b5050505050565b60006104a882610700565b905081356104b4610a74565b10156105135760405162461bcd60e51b8152602060048201526024808201527f55706461746520736c6f7420697320746f6f2066617220696e207468652066756044820152637475726560e01b60648201526084015b60405180910390fd5b600454826020013510156105745760405162461bcd60e51b815260206004820152602260248201527f55706461746520736c6f74206c657373207468616e2063757272656e74206865604482015261185960f21b606482015260840161050a565b801561059557610591826020013583606001358460800135610ad0565b5050565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207061727469636970616e7473000000000000000000604482015260640161050a565b6105e5610656565b6001600160a01b03811661064a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050a565b610653816106b0565b50565b6000546001600160a01b0316331461042a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061070d8335610833565b6000818152600860205260408120549192500361078a5760405162461bcd60e51b815260206004820152603560248201527f53796e6320636f6d6d697474656520666f722063757272656e7420706572696f604482015274321034b9903737ba1034b734ba34b0b634bd32b21760591b606482015260840161050a565b600a836040013510156107f95760405162461bcd60e51b815260206004820152603160248201527f4c657373207468616e204d494e5f53594e435f434f4d4d49545445455f5041526044820152702a24a1a4a820a72a299039b4b3b732b21760791b606482015260840161050a565b61080283610ba3565b505061ffff7f0000000000000000000000000000000000000000000000000000000000000000166040909101351190565b600061085f7f00000000000000000000000000000000000000000000000000000000000000008361132e565b92915050565b60006108746060830183611342565b61087d9061154b565b905061088761107e565b602083013560005b60208110156108e5576108a461010083611557565b836108b083601f61156b565b604181106108c0576108c061157e565b60200201526108d16101008361132e565b9150806108dd81611594565b91505061088f565b5060006108f2858061115c565b60600135905060005b60208110156109515761091061010083611557565b8461091c83604061156b565b6041811061092c5761092c61157e565b602002015261093d6101008361132e565b91508061094981611594565b9150506108fb565b5061095f6040860135610f36565b6104008401526001548451602086015160408088015160025491516320702f5760e01b81526001600160a01b03958616956320702f57956109aa95909490939291169060040161164d565b602060405180830381865afa1580156109c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109eb91906116f2565b61049657600080fd5b60008281526008602052604090205415801590610a1f57506000828152600860205260409020548114155b15610a355750506003805460ff60a01b19169055565b60008281526008602052604080822083905551829184917f783ee45e8820a8249b1456ff4a715f3bd483b1a59bdc7a49bbc316bbd67a4e2f9190a35050565b60007f0000000000000000000000000000000000000000000000000000000000000000610ac17f00000000000000000000000000000000000000000000000000000000000000004261156b565b610acb919061132e565b905090565b60008381526005602052604090205415610b0c576000838152600560205260409020548214610b07576003805460ff60a01b191690555b505050565b60008381526007602052604090205415610b47576000838152600760205260409020548114610b07576003805460ff60a01b19169055505050565b6004839055600083815260056020908152604080832085905560078252808320849055600690915280822042905551839185917ffefccbcf6acd2cac524c1cb2d70450cabbec5bc95873e927c121d2d9b7924a029190a3505050565b6000610baf8235610f36565b90506000610bc08360200135610f36565b90506000610bd18460400135610f36565b90506000610bdf8535610833565b600081815260086020908152604080832054815192830189905290820187905292935060029060600160408051601f1981840301815290829052610c2291611714565b602060405180830381855afa158015610c3f573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610c629190611726565b90506002818860600135604051602001610c86929190918252602082015260400190565b60408051601f1981840301815290829052610ca091611714565b602060405180830381855afa158015610cbd573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ce09190611726565b905060028185604051602001610d00929190918252602082015260400190565b60408051601f1981840301815290829052610d1a91611714565b602060405180830381855afa158015610d37573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610d5a9190611726565b90506002818860800135604051602001610d7e929190918252602082015260400190565b60408051601f1981840301815290829052610d9891611714565b602060405180830381855afa158015610db5573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610dd89190611726565b905060028183604051602001610df8929190918252602082015260400190565b60408051601f1981840301815290829052610e1291611714565b602060405180830381855afa158015610e2f573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e529190611726565b90506000610e5f82610f36565b9050610e706001600160fd1b61156b565b166000610e8060a08a018a61173f565b810190610e8d919061178d565b60408051602080820183528582526001548451918501518486015160035495516320702f5760e01b815296975093956001600160a01b03928316956320702f5795610ee09594909291169060040161164d565b602060405180830381865afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2191906116f2565b610f2a57600080fd5b50505050505050505050565b60006008827eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff16901b6008837fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0016901c1791506010827dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff16901b6010837fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c1791506020827bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16901b6020837fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c17915060408277ffffffffffffffff0000000000000000ffffffffffffffff16901b60408377ffffffffffffffff0000000000000000ffffffffffffffff1916901c179150608082901b608083901c1791508160001b9050919050565b6040518061082001604052806041906020820280368337509192915050565b6000602082840312156110af57600080fd5b81356001600160a01b03811681146110c657600080fd5b9392505050565b6000602082840312156110df57600080fd5b5035919050565b6000602082840312156110f857600080fd5b813567ffffffffffffffff81111561110f57600080fd5b8201608081850312156110c657600080fd5b60006020828403121561113357600080fd5b813567ffffffffffffffff81111561114a57600080fd5b820160c081850312156110c657600080fd5b6000823560be1983360301811261117257600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156111b5576111b561117c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156111e4576111e461117c565b604052919050565b600082601f8301126111fd57600080fd5b813567ffffffffffffffff8111156112175761121761117c565b61122a601f8201601f19166020016111bb565b81815284602083860101111561123f57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0823603121561126e57600080fd5b60405160c0810167ffffffffffffffff82821081831117156112925761129261117c565b81604052843583526020850135602084015260408501356040840152606085013560608401526080850135608084015260a08501359150808211156112d657600080fd5b506112e3368286016111ec565b60a08301525092915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561085f5761085f6112ef565b634e487b7160e01b600052601260045260246000fd5b60008261133d5761133d611318565b500490565b60008235605e1983360301811261117257600080fd5b600067ffffffffffffffff8211156113725761137261117c565b5060051b60200190565b600082601f83011261138d57600080fd5b813560206113a261139d83611358565b6111bb565b828152600592831b85018201928282019190878511156113c157600080fd5b8387015b8581101561145557803567ffffffffffffffff8111156113e55760008081fd5b8801603f81018a136113f75760008081fd5b85810135604061140961139d83611358565b82815291851b8301810191888101908d8411156114265760008081fd5b938201935b838510156114445784358252938901939089019061142b565b8852505050938501935084016113c5565b5090979650505050505050565b60006060828403121561147457600080fd5b61147c611192565b9050813567ffffffffffffffff8082111561149657600080fd5b6114a2858386016111ec565b83526020915081840135818111156114b957600080fd5b8401601f810186136114ca57600080fd5b80356114d861139d82611358565b81815260059190911b820184019084810190888311156114f757600080fd5b928501925b82841015611515578335825292850192908501906114fc565b808688015250505050604084013591508082111561153257600080fd5b5061153f8482850161137c565b60408301525092915050565b600061085f3683611462565b60008261156657611566611318565b500690565b8181038181111561085f5761085f6112ef565b634e487b7160e01b600052603260045260246000fd5b6000600182016115a6576115a66112ef565b5060010190565b60005b838110156115c85781810151838201526020016115b0565b50506000910152565b600081518084526020808501808196508360051b810191508286016000805b8681101561163f578385038a52825180518087529087019087870190845b8181101561162a5783518352928901929189019160010161160e565b50509a87019a955050918501916001016115f0565b509298975050505050505050565b6080815260008551806080840152602061166d8260a08601838b016115ad565b60a0601f19601f9390930192909216840184810383018583015287519281018390528782019260009160c001905b808310156116bb578451825293830193600192909201919083019061169b565b5085810360408701526116ce81896115d1565b9450505050506116e960608301846001600160a01b03169052565b95945050505050565b60006020828403121561170457600080fd5b815180151581146110c657600080fd5b600082516111728184602087016115ad565b60006020828403121561173857600080fd5b5051919050565b6000808335601e1984360301811261175657600080fd5b83018035915067ffffffffffffffff82111561177157600080fd5b60200191503681900382131561178657600080fd5b9250929050565b60006020828403121561179f57600080fd5b813567ffffffffffffffff8111156117b657600080fd5b6117c284828501611462565b94935050505056fea26469706673582212208e2b6bbd26b869e2899672f4030a3be693502de824f03172af432dc8182edfac64736f6c63430008100033";

type EthereumLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthereumLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthereumLightClient__factory extends ContractFactory {
  constructor(...args: EthereumLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    placeholderVerifier: PromiseOrValue<string>,
    step: PromiseOrValue<string>,
    rotate: PromiseOrValue<string>,
    genesisValidatorsRoot: PromiseOrValue<BytesLike>,
    genesisTime: PromiseOrValue<BigNumberish>,
    secondsPerSlot: PromiseOrValue<BigNumberish>,
    slotsPerPeriod: PromiseOrValue<BigNumberish>,
    syncCommitteePeriod: PromiseOrValue<BigNumberish>,
    syncCommitteePoseidon: PromiseOrValue<BytesLike>,
    sourceChainId: PromiseOrValue<BigNumberish>,
    finalityThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EthereumLightClient> {
    return super.deploy(
      placeholderVerifier,
      step,
      rotate,
      genesisValidatorsRoot,
      genesisTime,
      secondsPerSlot,
      slotsPerPeriod,
      syncCommitteePeriod,
      syncCommitteePoseidon,
      sourceChainId,
      finalityThreshold,
      overrides || {}
    ) as Promise<EthereumLightClient>;
  }
  override getDeployTransaction(
    placeholderVerifier: PromiseOrValue<string>,
    step: PromiseOrValue<string>,
    rotate: PromiseOrValue<string>,
    genesisValidatorsRoot: PromiseOrValue<BytesLike>,
    genesisTime: PromiseOrValue<BigNumberish>,
    secondsPerSlot: PromiseOrValue<BigNumberish>,
    slotsPerPeriod: PromiseOrValue<BigNumberish>,
    syncCommitteePeriod: PromiseOrValue<BigNumberish>,
    syncCommitteePoseidon: PromiseOrValue<BytesLike>,
    sourceChainId: PromiseOrValue<BigNumberish>,
    finalityThreshold: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      placeholderVerifier,
      step,
      rotate,
      genesisValidatorsRoot,
      genesisTime,
      secondsPerSlot,
      slotsPerPeriod,
      syncCommitteePeriod,
      syncCommitteePoseidon,
      sourceChainId,
      finalityThreshold,
      overrides || {}
    );
  }
  override attach(address: string): EthereumLightClient {
    return super.attach(address) as EthereumLightClient;
  }
  override connect(signer: Signer): EthereumLightClient__factory {
    return super.connect(signer) as EthereumLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthereumLightClientInterface {
    return new utils.Interface(_abi) as EthereumLightClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthereumLightClient {
    return new Contract(address, _abi, signerOrProvider) as EthereumLightClient;
  }
}
