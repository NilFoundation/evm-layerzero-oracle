/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LoremIpsumSubscriber,
  LoremIpsumSubscriberInterface,
} from "../../../contracts/pubsub/LoremIpsumSubscriber";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "startSlot",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endSlot",
        type: "uint64",
      },
    ],
    name: "InvalidSlotRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "SubscriptionAlreadyActive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "SubscriptionNotActive",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "startSlot",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "endSlot",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "sourceChainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "sourceAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "eventSig",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Subscription",
        name: "subscription",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "sourceChainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "sourceAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "eventSig",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Subscription",
        name: "subscription",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "eventsPublished",
    outputs: [
      {
        internalType: "enum PublishStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_sourceChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_sourceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_eventSig",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_startSlot",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_endSlot",
        type: "uint64",
      },
    ],
    name: "subscribe",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "enum SubscriptionStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_sourceChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_sourceAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_eventSig",
        type: "bytes32",
      },
    ],
    name: "unsubscribe",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610527806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633cca331c14610051578063651389591461008a57806394259c6c146100ab57806397229719146100db575b600080fd5b61007461005f366004610361565b60016020526000908152604090205460ff1681565b6040516100819190610390565b60405180910390f35b61009d6100983660046103f2565b6100ee565b604051908152602001610081565b6100ce6100b9366004610361565b60026020526000908152604090205460ff1681565b604051610081919061045f565b61009d6100e9366004610473565b610259565b60008060405180608001604052808963ffffffff168152602001886001600160a01b03168152602001876001600160a01b0316815260200186815250905060008160405160200161013f91906104af565b60408051601f1981840301815291905280516020909101209050600160008281526002602052604090205460ff16600181111561017e5761017e61037a565b036101a457604051634702100760e11b8152600481018290526024015b60405180910390fd5b6000818152600260205260409020805460ff1916600117905567ffffffffffffffff80861690851610156101ff57604051633c04832160e21b815267ffffffffffffffff80871660048301528516602482015260440161019b565b8367ffffffffffffffff168567ffffffffffffffff16827f5c727204c662dd3d053e4f52d9c6872a50938b7af3f1497df385c3b5f4e5eb738560405161024591906104af565b60405180910390a498975050505050505050565b60008060405180608001604052808663ffffffff168152602001856001600160a01b03168152602001336001600160a01b031681526020018481525090506000816040516020016102aa91906104af565b60408051601f19818403018152919052805160209091012090506000808281526002602052604090205460ff1660018111156102e8576102e861037a565b036103085760405162191d2960e11b81526004810182905260240161019b565b60008181526002602052604090819020805460ff191690555181907f0a82aeeb867dc22c12ad75195fd9acfc1a0f838cd64348e4ed6a25e199def9c8906103509085906104af565b60405180910390a295945050505050565b60006020828403121561037357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106103a4576103a461037a565b91905290565b803563ffffffff811681146103be57600080fd5b919050565b80356001600160a01b03811681146103be57600080fd5b803567ffffffffffffffff811681146103be57600080fd5b60008060008060008060c0878903121561040b57600080fd5b610414876103aa565b9550610422602088016103c3565b9450610430604088016103c3565b935060608701359250610445608088016103da565b915061045360a088016103da565b90509295509295509295565b60208101600283106103a4576103a461037a565b60008060006060848603121561048857600080fd5b610491846103aa565b925061049f602085016103c3565b9150604084013590509250925092565b815163ffffffff1681526020808301516001600160a01b039081169183019190915260408084015190911690820152606091820151918101919091526080019056fea2646970667358221220ee298f54c4bb72d3776fc426a0fc41f237e5197a4d4236320aee584e9b25ec5664736f6c63430008100033";

type LoremIpsumSubscriberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoremIpsumSubscriberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoremIpsumSubscriber__factory extends ContractFactory {
  constructor(...args: LoremIpsumSubscriberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LoremIpsumSubscriber> {
    return super.deploy(overrides || {}) as Promise<LoremIpsumSubscriber>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LoremIpsumSubscriber {
    return super.attach(address) as LoremIpsumSubscriber;
  }
  override connect(signer: Signer): LoremIpsumSubscriber__factory {
    return super.connect(signer) as LoremIpsumSubscriber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoremIpsumSubscriberInterface {
    return new utils.Interface(_abi) as LoremIpsumSubscriberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoremIpsumSubscriber {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LoremIpsumSubscriber;
  }
}
