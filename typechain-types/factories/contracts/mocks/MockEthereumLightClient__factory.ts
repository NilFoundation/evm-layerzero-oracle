/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockEthereumLightClient,
  MockEthereumLightClientInterface,
} from "../../../contracts/mocks/MockEthereumLightClient";

const _abi = [
  {
    inputs: [],
    name: "consistent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "head",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "headers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_slot",
        type: "uint256",
      },
    ],
    name: "makeTestState",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "stateRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "timestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "newRawState",
        type: "bytes",
      },
    ],
    name: "updateState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610616806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806367acd4751161005b57806367acd475146100ee5780638bc33af3146101035780638f7dcfa314610127578063f4cac30d1461012f57600080fd5b80632bcccca51461008257806356f90d791461009d578063638a364a146100ce575b600080fd5b60015460ff1660405190151581526020015b60405180910390f35b6100c06100ab366004610415565b60009081526002602052604090206001015490565b604051908152602001610094565b6100e16100dc366004610415565b61014f565b604051610094919061042e565b6101016100fc366004610492565b6102a7565b005b6100c0610111366004610415565b6000908152600260208190526040909120015490565b6000546100c0565b6100c061013d366004610415565b60009081526002602052604090205490565b6040805160a080820183526000808352602080840182815284860183905260608086018481526080808801959095528751808501899052600781840152666865616465727360c81b818701528089018a905288518082038701815290870189528051908501209092528651808401889052600a81830152697374617465526f6f747360b01b81860152808801899052875180820390950185529094019095528151910120825291839052610204836002610543565b60408083018290528251602080850151606086015193516102409593949193920193845260208401929092526040830152606082015260800190565b60408051808303601f19018152918152815160209283012060808481019182528251855181860152938501518484015291840151606080850191909152840151918301919091525160a082015260c001604051602081830303815290604052915050919050565b6000818060200190518101906102bd9190610570565b9050600081600001518260200151836040015184606001516040516020016102fe949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050816080015181146103795760405162461bcd60e51b815260206004820152602260248201527f6c69676874436c69656e7453746174654861736820697320636f727275707465604482015261642160f01b60648201526084015b60405180910390fd5b6000548260600151116103ce5760405162461bcd60e51b815260206004820152601760248201527f54727920746f2072656e6577206f6c64207374617465210000000000000000006044820152606401610370565b506060810180516000818155908152600260208181526040928390208551815590850151600182015591840151908201559051600382015560809091015160049091015550565b60006020828403121561042757600080fd5b5035919050565b600060208083528351808285015260005b8181101561045b5785810183015185820160400152820161043f565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104a457600080fd5b813567ffffffffffffffff808211156104bc57600080fd5b818401915084601f8301126104d057600080fd5b8135818111156104e2576104e261047c565b604051601f8201601f19908116603f0116810190838211818310171561050a5761050a61047c565b8160405282815287602084870101111561052357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600081600019048311821515161561056b57634e487b7160e01b600052601160045260246000fd5b500290565b600060a0828403121561058257600080fd5b60405160a0810181811067ffffffffffffffff821117156105a5576105a561047c565b80604052508251815260208301516020820152604083015160408201526060830151606082015260808301516080820152809150509291505056fea264697066735822122045d92b4283d669822a0edf402aad5a9740254f2a5baa601cde8aaabca19f8b2a64736f6c63430008100033";

type MockEthereumLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEthereumLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEthereumLightClient__factory extends ContractFactory {
  constructor(...args: MockEthereumLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEthereumLightClient> {
    return super.deploy(overrides || {}) as Promise<MockEthereumLightClient>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockEthereumLightClient {
    return super.attach(address) as MockEthereumLightClient;
  }
  override connect(signer: Signer): MockEthereumLightClient__factory {
    return super.connect(signer) as MockEthereumLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEthereumLightClientInterface {
    return new utils.Interface(_abi) as MockEthereumLightClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEthereumLightClient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEthereumLightClient;
  }
}
