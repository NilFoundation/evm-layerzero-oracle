/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockLoremIpsum,
  MockLoremIpsumInterface,
} from "../../../../contracts/amb/mocks/MockLoremIpsum";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainId",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "sourceChainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "sourceAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationAddress",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Message",
        name: "message",
        type: "tuple",
      },
    ],
    name: "_executeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "_getMessageAndRoot",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "sourceChainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "sourceAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationAddress",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Message",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "_send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainId",
        type: "uint32",
      },
      {
        internalType: "contract MockLoremIpsum",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "addMessageReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeNextMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_destinationAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "sentMessages",
    outputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "telepathyReceivers",
    outputs: [
      {
        internalType: "contract MockLoremIpsum",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110db3803806110db83398101604081905261002f9161004e565b6000805463ffffffff191663ffffffff9290921691909117905561007b565b60006020828403121561006057600080fd5b815163ffffffff8116811461007457600080fd5b9392505050565b6110518061008a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806368346a921161006657806368346a921461015d578063903e4d1e14610170578063a96a2e9214610196578063c8ce3cc0146101a9578063df1e32bb146101bc57600080fd5b8063024664701461009857806314235856146100de57806336191548146101245780634d443e901461013c575b600080fd5b6100c16100a63660046108c6565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101226100ec366004610900565b63ffffffff91909116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b005b61012c6101de565b60405190151581526020016100d5565b61014f61014a36600461097f565b61041f565b6040519081526020016100d5565b61014f61016b3660046109e3565b610546565b61018361017e366004610a44565b610566565b6040516100d59796959493929190610aaf565b61014f6101a436600461097f565b610652565b61012c6101b7366004610bee565b610660565b6101cf6101ca36600461097f565b610775565b6040516100d593929190610d32565b60038054600091829160029183918290610200906001600160401b0316610d68565b825461010092830a6001600160401b03818102199092169282169081029290921790935583526020808401949094526040928301600020835160e081018552815460ff8116825292830490931694830194909452600160481b900463ffffffff9081169282019290925260018301546001600160a01b0381166060830152600160a01b90049091166080820152600282015460a082015260038201805491929160c0840191906102af90610d9c565b80601f01602080910402602001604051908101604052809291908181526020018280546102db90610d9c565b80156103285780601f106102fd57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161030b57829003601f168201915b50505091909252505050608081015163ffffffff166000908152600160205260409020549091506001600160a01b0316806103a95760405162461bcd60e51b815260206004820152601e60248201527f4d6f636b414d423a204e6f20726563656976657220666f7220636861696e0000604482015260640160405180910390fd5b60405163032338f360e61b81526001600160a01b0382169063c8ce3cc0906103d5908590600401610dd6565b6020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610de9565b9250505090565b600080600061043087878787610775565b9250509150816002600080600481819054906101000a90046001600160401b031661045a90610d68565b825461010092830a6001600160401b0381810219909216928216908102929092179093558352602080840194909452604092830160002085518154958701519487015160ff90911668ffffffffffffffffff19909616959095179390921602919091176cffffffff0000000000000000001916600160481b63ffffffff93841602178155606083015160018201805460808601516001600160a01b039093166001600160c01b031990911617600160a01b92909416919091029290921790915560a0820151600282015560c082015160038201906105389082610e5a565b509198975050505050505050565b600061055d856001600160a01b038616858561041f565b95945050505050565b6002602081905260009182526040909120805460018201549282015460038301805460ff8416956001600160401b036101008604169563ffffffff600160481b9096048616956001600160a01b03831695600160a01b909304169391929091906105cf90610d9c565b80601f01602080910402602001604051908101604052809291908181526020018280546105fb90610d9c565b80156106485780601f1061061d57610100808354040283529160200191610648565b820191906000526020600020905b81548152906001019060200180831161062b57829003601f168201915b5050505050905087565b600061055d8585858561041f565b60008060606000630d47bdd060e01b856040015186606001518760c0015160405160240161069093929190610f19565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260a0860151909150806001600160a01b0316826040516106e29190610f49565b6000604051808303816000865af19150503d806000811461071f576040519150601f19603f3d011682016040523d82523d6000602084013e610724565b606091505b50805191955093506000925060200390506107655760008280602001905181019061074f9190610f65565b6001600160e01b03191662d47bdd60e41b149150505b82801561055d5750949350505050565b6040805160e08082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905260c08088018490528851968701895260018752855464010000000081046001600160401b03168887015263ffffffff908116888b015233888601528d169287019290925285018a90528651601f8901849004840281018401909752878752949590949293849390929083019190899089908190840183828082843760009201829052509390945250929350915061084390508261085c565b80516020820120929a9099509197509095505050505050565b6060816000015182602001518360400151846060015185608001518660a001518760c001516040516020016108979796959493929190610f8f565b6040516020818303038152906040529050919050565b803563ffffffff811681146108c157600080fd5b919050565b6000602082840312156108d857600080fd5b6108e1826108ad565b9392505050565b6001600160a01b03811681146108fd57600080fd5b50565b6000806040838503121561091357600080fd5b61091c836108ad565b9150602083013561092c816108e8565b809150509250929050565b60008083601f84011261094957600080fd5b5081356001600160401b0381111561096057600080fd5b60208301915083602082850101111561097857600080fd5b9250929050565b6000806000806060858703121561099557600080fd5b61099e856108ad565b93506020850135925060408501356001600160401b038111156109c057600080fd5b6109cc87828801610937565b95989497509550505050565b80356108c1816108e8565b600080600080606085870312156109f957600080fd5b610a02856108ad565b93506020850135610a12816108e8565b925060408501356001600160401b038111156109c057600080fd5b80356001600160401b03811681146108c157600080fd5b600060208284031215610a5657600080fd5b6108e182610a2d565b60005b83811015610a7a578181015183820152602001610a62565b50506000910152565b60008151808452610a9b816020860160208601610a5f565b601f01601f19169290920160200192915050565b60ff881681526001600160401b038716602082015263ffffffff86811660408301526001600160a01b03861660608301528416608082015260a0810183905260e060c08201819052600090610b0690830184610a83565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610b4b57610b4b610b13565b60405290565b803560ff811681146108c157600080fd5b600082601f830112610b7357600080fd5b81356001600160401b0380821115610b8d57610b8d610b13565b604051601f8301601f19908116603f01168101908282118183101715610bb557610bb5610b13565b81604052838152866020858801011115610bce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610c0057600080fd5b81356001600160401b0380821115610c1757600080fd5b9083019060e08286031215610c2b57600080fd5b610c33610b29565b610c3c83610b51565b8152610c4a60208401610a2d565b6020820152610c5b604084016108ad565b6040820152610c6c606084016109d8565b6060820152610c7d608084016108ad565b608082015260a083013560a082015260c083013582811115610c9e57600080fd5b610caa87828601610b62565b60c08301525095945050505050565b60ff81511682526001600160401b0360208201511660208301526000604082015163ffffffff808216604086015260018060a01b036060850151166060860152806080850151166080860152505060a082015160a084015260c082015160e060c0850152610d2a60e0850182610a83565b949350505050565b606081526000610d456060830186610cb9565b8281036020840152610d578186610a83565b915050826040830152949350505050565b60006001600160401b03808316818103610d9257634e487b7160e01b600052601160045260246000fd5b6001019392505050565b600181811c90821680610db057607f821691505b602082108103610dd057634e487b7160e01b600052602260045260246000fd5b50919050565b6020815260006108e16020830184610cb9565b600060208284031215610dfb57600080fd5b815180151581146108e157600080fd5b601f821115610e5557600081815260208120601f850160051c81016020861015610e325750805b601f850160051c820191505b81811015610e5157828155600101610e3e565b5050505b505050565b81516001600160401b03811115610e7357610e73610b13565b610e8781610e818454610d9c565b84610e0b565b602080601f831160018114610ebc5760008415610ea45750858301515b600019600386901b1c1916600185901b178555610e51565b600085815260208120601f198616915b82811015610eeb57888601518255948401946001909101908401610ecc565b5085821015610f095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b63ffffffff841681526001600160a01b038316602082015260606040820181905260009061055d90830184610a83565b60008251610f5b818460208701610a5f565b9190910192915050565b600060208284031215610f7757600080fd5b81516001600160e01b0319811681146108e157600080fd5b6001600160f81b031960f889901b1681526001600160c01b031960c088901b1660018201526001600160e01b031960e087811b821660098401526bffffffffffffffffffffffff19606088901b16600d84015285901b166021820152602581018390528151600090611008816045850160208701610a5f565b919091016045019897505050505050505056fea264697066735822122010af406235c1e65944a1f3877a3a9215060f621c9cd57fe1fe36e07760440aec64736f6c63430008100033";

type MockLoremIpsumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLoremIpsumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLoremIpsum__factory extends ContractFactory {
  constructor(...args: MockLoremIpsumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockLoremIpsum> {
    return super.deploy(_chainId, overrides || {}) as Promise<MockLoremIpsum>;
  }
  override getDeployTransaction(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainId, overrides || {});
  }
  override attach(address: string): MockLoremIpsum {
    return super.attach(address) as MockLoremIpsum;
  }
  override connect(signer: Signer): MockLoremIpsum__factory {
    return super.connect(signer) as MockLoremIpsum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLoremIpsumInterface {
    return new utils.Interface(_abi) as MockLoremIpsumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLoremIpsum {
    return new Contract(address, _abi, signerOrProvider) as MockLoremIpsum;
  }
}
