/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockSourceAMB,
  MockSourceAMBInterface,
} from "../../../../contracts/amb/mocks/MockSourceAMB";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "_sendingEnabled",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "destinationChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106c53803806106c583398101604081905261002f91610065565b6000805460338054600160ff199091161790556001600160481b031916911515610100600160481b03191691909117905561008e565b60006020828403121561007757600080fd5b8151801515811461008757600080fd5b9392505050565b6106288061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633e99e9ce1461006757806354fd4d501461008957806368346a92146100a8578063a96a2e92146100c9578063affed0e0146100dc578063ffa1ad741461010e575b600080fd5b6000546100749060ff1681565b60405190151581526020015b60405180910390f35b6033546100969060ff1681565b60405160ff9091168152602001610080565b6100bb6100b6366004610429565b610116565b604051908152602001610080565b6100bb6100d7366004610498565b610265565b6000546100f590610100900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610080565b610096600181565b6000805460ff166101645760405162461bcd60e51b815260206004820152601360248201527214d95b991a5b99c81a5cc8191a5cd8589b1959606a1b60448201526064015b60405180910390fd5b468563ffffffff16036101b55760405162461bcd60e51b815260206004820152601960248201527821b0b73737ba1039b2b732103a379039b0b6b29031b430b4b760391b604482015260640161015b565b6000806101cd876001600160a01b038816878761030a565b600080549294509092508291610100900467ffffffffffffffff169060016101f4836104da565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555067ffffffffffffffff167fe5944a34d67c652e0ebf2304b48432aae0b55e40f79ba8a21a4d7054c169ffac846040516102539190610533565b60405180910390a39695505050505050565b6000805460ff166102ae5760405162461bcd60e51b815260206004820152601360248201527214d95b991a5b99c81a5cc8191a5cd8589b1959606a1b604482015260640161015b565b468563ffffffff16036102ff5760405162461bcd60e51b815260206004820152601960248201527821b0b73737ba1039b2b732103a379039b0b6b29031b430b4b760391b604482015260640161015b565b6000806101cd878787875b60606000610378603360009054906101000a900460ff16600060019054906101000a900467ffffffffffffffff1646338a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038c92505050565b805160208201209097909650945050505050565b6060878787878787876040516020016103ab9796959493929190610566565b6040516020818303038152906040529050979650505050505050565b803563ffffffff811681146103db57600080fd5b919050565b60008083601f8401126103f257600080fd5b50813567ffffffffffffffff81111561040a57600080fd5b60208301915083602082850101111561042257600080fd5b9250929050565b6000806000806060858703121561043f57600080fd5b610448856103c7565b935060208501356001600160a01b038116811461046457600080fd5b9250604085013567ffffffffffffffff81111561048057600080fd5b61048c878288016103e0565b95989497509550505050565b600080600080606085870312156104ae57600080fd5b6104b7856103c7565b935060208501359250604085013567ffffffffffffffff81111561048057600080fd5b600067ffffffffffffffff80831681810361050557634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60005b8381101561052a578181015183820152602001610512565b50506000910152565b602081526000825180602084015261055281604085016020870161050f565b601f01601f19169190910160400192915050565b6001600160f81b031960f889901b1681526001600160c01b031960c088901b1660018201526001600160e01b031960e087811b821660098401526bffffffffffffffffffffffff19606088901b16600d84015285901b1660218201526025810183905281516000906105df81604585016020870161050f565b919091016045019897505050505050505056fea2646970667358221220b4205af25c02a66b273e3c6820034427a1c11cae6a8a05361381a57a64f12d1d64736f6c63430008100033";

type MockSourceAMBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSourceAMBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSourceAMB__factory extends ContractFactory {
  constructor(...args: MockSourceAMBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sendingEnabled: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockSourceAMB> {
    return super.deploy(
      _sendingEnabled,
      overrides || {}
    ) as Promise<MockSourceAMB>;
  }
  override getDeployTransaction(
    _sendingEnabled: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sendingEnabled, overrides || {});
  }
  override attach(address: string): MockSourceAMB {
    return super.attach(address) as MockSourceAMB;
  }
  override connect(signer: Signer): MockSourceAMB__factory {
    return super.connect(signer) as MockSourceAMB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSourceAMBInterface {
    return new utils.Interface(_abi) as MockSourceAMBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSourceAMB {
    return new Contract(address, _abi, signerOrProvider) as MockSourceAMB;
  }
}
