/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SourceAMB,
  SourceAMBInterface,
} from "../../../contracts/amb/SourceAMB";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "destinationChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "destinationChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "destinationAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610615806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633e99e9ce1461005c57806354fd4d501461007e57806368346a921461009d578063a96a2e92146100be578063affed0e0146100d1575b600080fd5b6000546100699060ff1681565b60405190151581526020015b60405180910390f35b60335461008b9060ff1681565b60405160ff9091168152602001610075565b6100b06100ab366004610416565b610103565b604051908152602001610075565b6100b06100cc366004610485565b610252565b6000546100ea90610100900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610075565b6000805460ff166101515760405162461bcd60e51b815260206004820152601360248201527214d95b991a5b99c81a5cc8191a5cd8589b1959606a1b60448201526064015b60405180910390fd5b468563ffffffff16036101a25760405162461bcd60e51b815260206004820152601960248201527821b0b73737ba1039b2b732103a379039b0b6b29031b430b4b760391b6044820152606401610148565b6000806101ba876001600160a01b03881687876102f7565b600080549294509092508291610100900467ffffffffffffffff169060016101e1836104c7565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555067ffffffffffffffff167fe5944a34d67c652e0ebf2304b48432aae0b55e40f79ba8a21a4d7054c169ffac846040516102409190610520565b60405180910390a39695505050505050565b6000805460ff1661029b5760405162461bcd60e51b815260206004820152601360248201527214d95b991a5b99c81a5cc8191a5cd8589b1959606a1b6044820152606401610148565b468563ffffffff16036102ec5760405162461bcd60e51b815260206004820152601960248201527821b0b73737ba1039b2b732103a379039b0b6b29031b430b4b760391b6044820152606401610148565b6000806101ba878787875b60606000610365603360009054906101000a900460ff16600060019054906101000a900467ffffffffffffffff1646338a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061037992505050565b805160208201209097909650945050505050565b6060878787878787876040516020016103989796959493929190610553565b6040516020818303038152906040529050979650505050505050565b803563ffffffff811681146103c857600080fd5b919050565b60008083601f8401126103df57600080fd5b50813567ffffffffffffffff8111156103f757600080fd5b60208301915083602082850101111561040f57600080fd5b9250929050565b6000806000806060858703121561042c57600080fd5b610435856103b4565b935060208501356001600160a01b038116811461045157600080fd5b9250604085013567ffffffffffffffff81111561046d57600080fd5b610479878288016103cd565b95989497509550505050565b6000806000806060858703121561049b57600080fd5b6104a4856103b4565b935060208501359250604085013567ffffffffffffffff81111561046d57600080fd5b600067ffffffffffffffff8083168181036104f257634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60005b838110156105175781810151838201526020016104ff565b50506000910152565b602081526000825180602084015261053f8160408501602087016104fc565b601f01601f19169190910160400192915050565b6001600160f81b031960f889901b1681526001600160c01b031960c088901b1660018201526001600160e01b031960e087811b821660098401526bffffffffffffffffffffffff19606088901b16600d84015285901b1660218201526025810183905281516000906105cc8160458501602087016104fc565b919091016045019897505050505050505056fea26469706673582212204dc2e47e44ca65eb1fc1f4ec811e2d52df4bb96e12076407c998eccaeba41b6b64736f6c63430008100033";

type SourceAMBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceAMBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceAMB__factory extends ContractFactory {
  constructor(...args: SourceAMBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SourceAMB> {
    return super.deploy(overrides || {}) as Promise<SourceAMB>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SourceAMB {
    return super.attach(address) as SourceAMB;
  }
  override connect(signer: Signer): SourceAMB__factory {
    return super.connect(signer) as SourceAMB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceAMBInterface {
    return new utils.Interface(_abi) as SourceAMBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SourceAMB {
    return new Contract(address, _abi, signerOrProvider) as SourceAMB;
  }
}
