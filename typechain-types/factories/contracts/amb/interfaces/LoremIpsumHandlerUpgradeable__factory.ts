/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  LoremIpsumHandlerUpgradeable,
  LoremIpsumHandlerUpgradeableInterface,
} from "../../../../contracts/amb/interfaces/LoremIpsumHandlerUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotFromLoremIpsumRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "__LoremIpsumHandler_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_sourceChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_sourceAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "handleMessage",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class LoremIpsumHandlerUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): LoremIpsumHandlerUpgradeableInterface {
    return new utils.Interface(_abi) as LoremIpsumHandlerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoremIpsumHandlerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LoremIpsumHandlerUpgradeable;
  }
}
