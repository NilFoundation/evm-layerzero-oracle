/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IZKLightClient,
  IZKLightClientInterface,
} from "../../../../../@nilfoundation/evm-lorem-ipsum/contracts/interfaces/IZKLightClient";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attestedSlot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalizedSlot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participation",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "finalizedHeaderRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "executionStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct LightClientUpdate",
        name: "update",
        type: "tuple",
      },
    ],
    name: "step",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IZKLightClient__factory {
  static readonly abi = _abi;
  static createInterface(): IZKLightClientInterface {
    return new utils.Interface(_abi) as IZKLightClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IZKLightClient {
    return new Contract(address, _abi, signerOrProvider) as IZKLightClient;
  }
}
